<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-lazy-init="true">

	<description>Spring公共配置文件 </description>
	<!-- 以静态变量保存ApplicationContext -->
	<bean class="org.springside.modules.utils.spring.SpringContextHolder"
		lazy-init="false" />

	<!-- 定义易受环境影响的变量 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<!-- 测试环境下的标准配置生命周期只在测试范畴 -->
				<value>classpath*:/application-test.properties</value>
			</list>
		</property>
	</bean>

	<context:annotation-config />
	<!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
	<context:component-scan base-package="com.jxet" />
	
	<!-- 数据源配置, 使用应用中的c3p0数据库连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<!-- Connection Info -->
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="acquireIncrement" value="1" />
		<property name="initialPoolSize" value="50"></property>
		<property name="maxIdleTime" value="300"></property>
		<property name="maxPoolSize" value="200"></property>
		<property name="minPoolSize" value="50"></property>

		<property name="acquireRetryDelay" value="1000"></property>
		<property name="acquireRetryAttempts" value="60"></property>
		<property name="breakAfterAcquireFailure" value="false"></property>

		<!-- 设置控线连接测试周期 -->
		<property name="idleConnectionTestPeriod" value="60" />

		<property name="testConnectionOnCheckin" value="true" />

		<property name="testConnectionOnCheckout" value="true" />
		<!-- Connection Pooling Info 配置连接池的一些相关参数 -->

	</bean>
 
	<!-- Hibernate配置 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
			<prop key="hibernate.dialect">${hibernate.dialect}</prop>
			<prop key="hibernate.connection.provider_class">org.hibernate.connection.C3P0ConnectionProvider</prop>
			<prop key="hibernate.cache.use_second_level_cache">false</prop>
			<prop key="hibernate.autoReconnect">true</prop>
			<prop key="hibernate.hbm2ddl.auto">update</prop>
			<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
			<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
			</props>
		</property>
		<property name="packagesToScan" value="com.jxet" />
	</bean>

	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 支持 @Transactional -->  
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />
		
		
		
		
	<!-- jxet数据源配置, 使用应用中的c3p0数据库连接池 -->
	<bean id="jxet_dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<!-- Connection Info -->
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jxet.jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="acquireIncrement" value="1" />
		<property name="initialPoolSize" value="50"></property>
		<property name="maxIdleTime" value="300"></property>
		<property name="maxPoolSize" value="200"></property>
		<property name="minPoolSize" value="50"></property>

		<property name="acquireRetryDelay" value="1000"></property>
		<property name="acquireRetryAttempts" value="60"></property>
		<property name="breakAfterAcquireFailure" value="false"></property>

		<!-- 设置控线连接测试周期 -->
		<property name="idleConnectionTestPeriod" value="60" />

		<property name="testConnectionOnCheckin" value="true" />

		<property name="testConnectionOnCheckout" value="true" />
		<!-- Connection Pooling Info 配置连接池的一些相关参数 -->

	</bean>
 
	<!-- Hibernate配置 -->
	<bean id="jxtsessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="jxet_dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
			<prop key="hibernate.dialect">${hibernate.dialect}</prop>
			<prop key="hibernate.connection.provider_class">org.hibernate.connection.C3P0ConnectionProvider</prop>
			<prop key="hibernate.cache.use_second_level_cache">false</prop>
			<prop key="hibernate.autoReconnect">true</prop>
			<prop key="hibernate.hbm2ddl.auto">update</prop>
			<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
			<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
			</props>
		</property>
		<property name="packagesToScan" value="com.jxet" />
	</bean>

	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="jxttransactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="jxtsessionFactory" />
	</bean>

	<!-- 支持 @Transactional -->  
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="jxttransactionManager"
		proxy-target-class="true" />
</beans>